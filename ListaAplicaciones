import React, { useState } from 'react';
import { Link } from 'react-router-dom';

interface Aplicacion {
  id: number;
  nombre: string;
  descripcion: string;
  criticidad: 'Alta' | 'Media' | 'Baja';
  url: string;
  servidoresAsociados: string[];
  estado: 'Activa' | 'Inactiva' | 'Mantenimiento';
  fechaRegistro: string;
  // Campos técnicos detallados
  stack: {
    lenguaje: string;
    plataforma: string;
    frameworks: string[];
  };
  versionApi: string;
  soporte: {
    fechaFinSoporte: string;
    soporteActivo: boolean;
    tipoSoporte: 'Extendido' | 'Estándar' | 'Básico' | 'Sin soporte';
  };
  baseDatos: {
    motor: string;
    version: string;
  };
  documentacion: {
    url?: string;
    disponible: boolean;
    fechaActualizacion?: string;
  };
  licencia: {
    tipo: 'Comercial' | 'Open Source' | 'Freemium' | 'Enterprise';
    vigente: boolean;
    fechaVencimiento?: string;
    proveedor?: string;
  };
}

const ListaAplicaciones: React.FC = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCriticidad, setFilterCriticidad] = useState('');
  const [filterEstado, setFilterEstado] = useState('');

  // Datos de ejemplo
  const aplicaciones: Aplicacion[] = [
    {
      id: 1,
      nombre: 'Portal Web Principal',
      descripcion: 'Portal corporativo de PetroEcuador para servicios públicos',
      criticidad: 'Alta',
      url: 'https://portal.petroecuador.gob.ec',
      servidoresAsociados: ['PROD-WEB-01', 'PROD-WEB-02'],
      estado: 'Activa',
      fechaRegistro: '2025-01-10',
      stack: {
        lenguaje: 'JavaScript/TypeScript',
        plataforma: 'Node.js',
        frameworks: ['React', 'Express.js', 'Next.js']
      },
      versionApi: 'v2.1.5',
      soporte: {
        fechaFinSoporte: '2026-12-31',
        soporteActivo: true,
        tipoSoporte: 'Estándar'
      },
      baseDatos: {
        motor: 'PostgreSQL',
        version: '15.2'
      },
      documentacion: {
        url: 'https://docs.petroecuador.gob.ec/portal',
        disponible: true,
        fechaActualizacion: '2024-12-15'
      },
      licencia: {
        tipo: 'Enterprise',
        vigente: true,
        fechaVencimiento: '2026-01-10',
        proveedor: 'Microsoft Azure'
      }
    },
  ];

  const filteredAplicaciones = aplicaciones.filter(app => {
    const matchesSearch = app.nombre.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         app.descripcion.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         app.url.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCriticidad = filterCriticidad === '' || app.criticidad === filterCriticidad;
    const matchesEstado = filterEstado === '' || app.estado === filterEstado;
    return matchesSearch && matchesCriticidad && matchesEstado;
  });

  const getCriticidadColor = (criticidad: string) => {
    switch (criticidad) {
      case 'Alta':
        return 'bg-red-100 text-red-800';
      case 'Media':
        return 'bg-yellow-100 text-yellow-800';
      case 'Baja':
        return 'bg-green-100 text-green-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getEstadoColor = (estado: string) => {
    switch (estado) {
      case 'Activa':
        return 'bg-green-100 text-green-800';
      case 'Inactiva':
        return 'bg-red-100 text-red-800';
      case 'Mantenimiento':
        return 'bg-yellow-100 text-yellow-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="max-w-7xl mx-auto">
      <div className="mb-8">
        <div className="flex justify-between items-center mb-4">
          <div>
            <h1 className="text-3xl font-bold text-gray-800 mb-2">
              Listado de Aplicaciones
            </h1>
            <p className="text-gray-600">Ver todas las aplicaciones registradas en el sistema</p>
          </div>
          <Link
            to="/aplicaciones/nueva"
            className="bg-green-700 text-white px-4 py-2 rounded-lg hover:bg-green-800 transition-colors flex items-center space-x-2"
          >
            <span></span>
            <span>Nueva Aplicación</span>
          </Link>
        </div>

        {/* Filtros */}
        <div className="bg-white p-4 rounded-lg shadow-md mb-6">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Buscar
              </label>
              <input
                type="text"
                placeholder="Nombre, descripción o URL..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Criticidad
              </label>
              <select
                value={filterCriticidad}
                onChange={(e) => setFilterCriticidad(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="">Todas las criticidades</option>
                <option value="Alta">Alta</option>
                <option value="Media">Media</option>
                <option value="Baja">Baja</option>
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Estado
              </label>
              <select
                value={filterEstado}
                onChange={(e) => setFilterEstado(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500"
              >
                <option value="">Todos los estados</option>
                <option value="Activa">Activa</option>
                <option value="Inactiva">Inactiva</option>
                <option value="Mantenimiento">Mantenimiento</option>
              </select>
            </div>
            <div className="flex items-end">
              <button
                onClick={() => {
                  setSearchTerm('');
                  setFilterCriticidad('');
                  setFilterEstado('');
                }}
                className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors"
              >
                Limpiar Filtros
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Grid de aplicaciones */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
        {filteredAplicaciones.map((app) => (
          <div key={app.id} className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow">
            <div className="p-6">
              <div className="flex justify-between items-start mb-4">
                <h3 className="text-lg font-semibold text-gray-800 mb-2">{app.nombre}</h3>
                <div className="flex space-x-2">
                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getCriticidadColor(app.criticidad)}`}>
                    {app.criticidad}
                  </span>
                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getEstadoColor(app.estado)}`}>
                    {app.estado}
                  </span>
                </div>
              </div>
              
              <p className="text-gray-600 text-sm mb-4">{app.descripcion}</p>
              
              <div className="mb-4">
                <p className="text-xs text-gray-500 mb-1">URL:</p>
                <a 
                  href={app.url} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-800 text-sm break-all"
                >
                  {app.url}
                </a>
              </div>

              <div className="mb-4">
                <p className="text-xs text-gray-500 mb-2">Servidores Asociados:</p>
                <div className="flex flex-wrap gap-1">
                  {app.servidoresAsociados.map((servidor, index) => (
                    <span 
                      key={index}
                      className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded"
                    >
                      {servidor}
                    </span>
                  ))}
                </div>
              </div>

              <div className="text-xs text-gray-500 mb-4">
                Registrado: {new Date(app.fechaRegistro).toLocaleDateString('es-ES')}
              </div>

              <div className="flex justify-between items-center">
                <Link
                  to={`/aplicaciones/${app.id}`}
                  className="text-green-600 hover:text-green-800 text-sm font-medium"
                >
                Editar
                </Link>
                <Link
                  to={`/aplicaciones/${app.id}/detalle`}
                  className="text-blue-600 hover:text-blue-800 text-sm font-medium"
                >
                  Ver Detalle
                </Link>
              </div>
            </div>
          </div>
        ))}
      </div>

      {filteredAplicaciones.length === 0 && (
        <div className="bg-white rounded-lg shadow-md p-8 text-center">
          <div className="text-gray-500 text-lg mb-2">No se encontraron aplicaciones</div>
          <p className="text-gray-400">Intenta ajustar los filtros de búsqueda</p>
        </div>
      )}

      {/* Estadísticas */}
      <div className="bg-white p-6 rounded-lg shadow-md">
        <h3 className="text-lg font-semibold mb-4">Estadísticas de Aplicaciones</h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
          <div>
            <div className="text-2xl font-bold text-green-600">{aplicaciones.length}</div>
            <div className="text-sm text-gray-600">Total</div>
          </div>
          <div>
            <div className="text-2xl font-bold text-green-600">
              {aplicaciones.filter(a => a.estado === 'Activa').length}
            </div>
            <div className="text-sm text-gray-600">Activas</div>
          </div>
          <div>
            <div className="text-2xl font-bold text-red-600">
              {aplicaciones.filter(a => a.criticidad === 'Alta').length}
            </div>
            <div className="text-sm text-gray-600">Criticidad Alta</div>
          </div>
          <div>
            <div className="text-2xl font-bold text-yellow-600">
              {aplicaciones.filter(a => a.estado === 'Mantenimiento').length}
            </div>
            <div className="text-sm text-gray-600">En Mantenimiento</div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ListaAplicaciones;
