// Modificado por Marlyn Almeida el 18/08/2025
import React from 'react';
import { EyeIcon, PencilIcon, ComputerDesktopIcon } from '@heroicons/react/24/outline';
import { ActivoFisico } from '../../types/ActivoFisico';

interface TableProps {
  activos: ActivoFisico[];
  onVer: (activo: ActivoFisico) => void;
  onEditar: (activo: ActivoFisico) => void;
  getEstadoColor: (estado: string) => string;
}

const ActivosFisicosTable: React.FC<TableProps> = ({
  activos,
  onVer,
  onEditar,
  getEstadoColor
}) => {
  const garantiaVenceSoon = (fecha: string | null | undefined) => {
    if (!fecha) return false;
    const fechaVencimiento = new Date(fecha);
    const hoy = new Date();
    const diasRestantes = Math.floor((fechaVencimiento.getTime() - hoy.getTime()) / (1000 * 60 * 60 * 24));
    return diasRestantes <= 90 && diasRestantes > 0;
  };

  const garantiaVencida = (fecha: string | null | undefined) => {
    if (!fecha) return false;
    const fechaVencimiento = new Date(fecha);
    const hoy = new Date();
    return fechaVencimiento < hoy;
  };

  return (
    <div className="bg-white rounded-lg shadow-md overflow-hidden">
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Activo</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fabricante/Modelo</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ubicación</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Responsable</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acciones</th>
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {activos.map(activo => (
            <tr key={activo.id} className="hover:bg-gray-50">
              {/* Nombre del activo */}
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="flex items-center">
                  <ComputerDesktopIcon className="w-5 h-5 text-gray-400 mr-3" />
                  <div>
                    <div className="text-sm font-medium text-gray-900">{activo.nombre}</div>
                    <div className="text-xs text-gray-500">
                      {activo.codigoActivo} • {activo.numeroSerie}
                    </div>
                  </div>
                </div>
              </td>

              {/* Fabricante y Modelo */}
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="text-sm text-gray-900">{activo.fabricante}</div>
                <div className="text-xs text-gray-500">{activo.modelo}</div>
              </td>

              {/* Ubicación */}
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="text-sm text-gray-900">{activo.ubicacion}</div>
              </td>

              {/* Responsable */}
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="text-sm text-gray-900">{activo.administrador}</div>
                <div className="text-xs text-gray-500">Administrador</div>
              </td>

              {/* Estado */}
              <td className="px-6 py-4 whitespace-nowrap">
                <div className="space-y-1">
                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getEstadoColor(activo.estado)}`}>
                    {activo.estado}
                  </span>
                  {garantiaVencida(activo.fechaVencimientoGarantia) && (
                    <div className="text-xs text-red-600 font-medium">⚠️ Garantía vencida</div>
                  )}
                  {garantiaVenceSoon(activo.fechaVencimientoGarantia) && !garantiaVencida(activo.fechaVencimientoGarantia) && (
                    <div className="text-xs text-amber-600 font-medium">⏰ Garantía por vencer</div>
                  )}
                </div>
              </td>

              {/* Acciones */}
              <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <div className="flex space-x-2">
                  <button
                    onClick={() => onVer(activo)}
                    className="text-blue-600 hover:text-blue-900 p-2 rounded-full hover:bg-blue-100 transition-colors"
                    title="Ver detalles completos"
                  >
                    <EyeIcon className="w-4 h-4" />
                  </button>
                  <button
                    onClick={() => onEditar(activo)}
                    className="text-green-600 hover:text-green-900 p-2 rounded-full hover:bg-green-100 transition-colors"
                    title="Editar activo"
                  >
                    <PencilIcon className="w-4 h-4" />
                  </button>
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {activos.length === 0 && (
        <div className="text-center py-8">
          <div className="text-gray-500 text-lg mb-2">No se encontraron activos físicos</div>
          <p className="text-gray-400">Intenta ajustar los filtros de búsqueda</p>
        </div>
      )}
    </div>
  );
};

export default ActivosFisicosTable;
