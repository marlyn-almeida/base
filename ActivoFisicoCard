import React from 'react';
import {
  EyeIcon,
  PencilIcon,
  ServerIcon,
  CpuChipIcon,
  ComputerDesktopIcon
} from '@heroicons/react/24/outline';
import { ActivoFisicoForm } from '../../types/ActivoFisico';

interface Props {
  activo: ActivoFisicoForm;
  onVer: () => void;
  onEditar: () => void;
  getEstadoColor: (estado: string) => string;
}

const ActivoFisicoCard: React.FC<Props> = ({ activo, onVer, onEditar, getEstadoColor }) => {
  const garantiaVencida = () => {
    if (!activo.fechaVencimientoGarantia) return false;
    const fecha = new Date(activo.fechaVencimientoGarantia);
    return fecha < new Date();
  };

  const garantiaVenceSoon = () => {
    if (!activo.fechaVencimientoGarantia) return false;
    const fecha = new Date(activo.fechaVencimientoGarantia);
    const hoy = new Date();
    const diasRestantes = Math.floor((fecha.getTime() - hoy.getTime()) / (1000 * 60 * 60 * 24));
    return diasRestantes <= 90 && diasRestantes > 0;
  };

  return (
    <div className="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow border border-gray-200">
      {/* Header */}
      <div className="p-4 border-b border-gray-200">
        <div className="flex justify-between items-start mb-2">
          <div className="flex items-center space-x-2">
            <ServerIcon className="w-6 h-6 text-petroecuador-light" />
            <h3 className="text-lg font-semibold text-gray-800 truncate">
              {activo.nombre}
            </h3>
          </div>
          <span className={`px-2 py-1 text-xs font-semibold rounded-full ${getEstadoColor(activo.estado)}`}>
            {activo.estado}
          </span>
        </div>
        <div className="space-y-1 text-sm text-gray-600">
          <div><strong>Serie:</strong> {activo.numeroSerie}</div>
          <div><strong>Código:</strong> {activo.codigoActivo}</div>
        </div>
      </div>

      {/* Información principal */}
      <div className="p-4 space-y-3">
        {/* Fabricante y modelo */}
        <div className="flex items-center space-x-2">
          <ComputerDesktopIcon className="w-4 h-4 text-gray-400" />
          <span className="text-sm text-gray-700">
            <strong>{activo.fabricante}</strong> {activo.modelo}
          </span>
        </div>

        {/* Ubicación */}
        <div className="text-sm text-gray-600">
          <strong>Ubicación:</strong> {activo.ubicacion}
        </div>

        {/* Especificaciones técnicas */}
        <div className="bg-gray-50 p-3 rounded-lg">
          <div className="flex items-center space-x-2 mb-2">
            <CpuChipIcon className="w-4 h-4 text-gray-500" />
            <span className="text-sm font-medium text-gray-700">Especificaciones</span>
          </div>
          {/* Puedes agregar specs si están disponibles */}
        </div>

        {/* Responsable */}
        <div className="text-sm">
          <span className="text-gray-500">Administrador:</span>
          <div className="font-medium text-gray-700">{activo.administrador}</div>
        </div>

        {/* Alertas de garantía */}
        {garantiaVencida() && (
          <div className="bg-red-50 border border-red-200 p-2 rounded-lg">
            <div className="text-xs text-red-700 font-medium">⚠️ Garantía vencida</div>
            <div className="text-xs text-red-600">
              Venció el {new Date(activo.fechaVencimientoGarantia!).toLocaleDateString('es-ES')}
            </div>
          </div>
        )}

        {garantiaVenceSoon() && !garantiaVencida() && (
          <div className="bg-amber-50 border border-amber-200 p-2 rounded-lg">
            <div className="text-xs text-amber-700 font-medium">⏰ Garantía próxima a vencer</div>
            <div className="text-xs text-amber-600">
              Vence el {new Date(activo.fechaVencimientoGarantia!).toLocaleDateString('es-ES')}
            </div>
          </div>
        )}
      </div>

      {/* Acciones */}
      <div className="px-4 py-3 bg-gray-50 border-t border-gray-200 flex justify-end space-x-2">
        <button
          onClick={onVer}
          className="px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors flex items-center space-x-1"
        >
          <EyeIcon className="w-4 h-4" />
          <span>Ver</span>
        </button>
        <button
          onClick={onEditar}
          className="px-3 py-1 text-sm bg-green-100 text-green-700 rounded hover:bg-green-200 transition-colors flex items-center space-x-1"
        >
          <PencilIcon className="w-4 h-4" />
          <span>Editar</span>
        </button>
      </div>
    </div>
  );
};

export default ActivoFisicoCard;
