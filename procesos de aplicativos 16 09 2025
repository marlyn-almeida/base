CREATE OR ALTER PROCEDURE dbo.get_aplicativos_paginados
    @limit INT,
    @offset INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        a.aplcodigo,
        a.aplnombrecorto,
        a.aplnombrecompleto,
        a.aplactivo,
        e.estnombre AS estado,
        c.crinombre AS criticidad,
        1 AS status
    FROM dbo.aplicativo a
    INNER JOIN estado e ON a.estcodigo = e.estcodigo
    INNER JOIN criticidad c ON a.cricodigo = c.cricodigo
    ORDER BY a.aplcodigo DESC
    OFFSET @offset ROWS
    FETCH NEXT @limit ROWS ONLY;
END


CREATE OR ALTER PROCEDURE dbo.get_total_paginas_aplicativos
AS
BEGIN
    SET NOCOUNT ON;

    SELECT COUNT(*) AS total, 1 AS status
    FROM dbo.aplicativo
    WHERE aplactivo = 1;
END


CREATE OR ALTER PROCEDURE dbo.get_contratos_aplicativos
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        ca.contcodigo,
        ca.conttipo,
        ca.contdescripcion,
        ca.contproveedor,
        ca.contregistro,
        ca.aplcodigo,
        a.aplnombrecorto AS nombreAplicativo,
        1 AS status
    FROM dbo.contrato_aplicativo ca
    LEFT JOIN dbo.aplicativo a ON ca.aplcodigo = a.aplcodigo
    ORDER BY ca.contcodigo DESC;
END


-------------------------------------------------------
CREATE OR ALTER PROCEDURE dbo.get_aplicativos
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        -- ?? Identificación
        a.aplcodigo               AS aplcodigo,
        a.aplnombrecorto          AS nombreCorto,
        a.aplnombrecompleto       AS nombreCompleto,
        a.aplregistro             AS registro,
        a.aplactivo               AS estadoActivo,

        -- ?? Fechas
        a.aplfechaadquisicion     AS fechaAdquisicion,
        a.aplfechaimplementacion  AS fechaImplementacion,
        a.aplfechaactualizacion   AS fechaActualizacion,
        a.aplanocreacion          AS anioCreacion,

        -- ?? Usuarios
        a.aplnumerousuario        AS numeroUsuarios,
        a.apladministradorusuario AS administradorUsuario,
        a.aplvalorestimado        AS valorEstimado,
        a.apltransaccionesmensuales AS transaccionesMensuales,

        -- ?? Proveedor y versión
        a.aplproveedor            AS proveedor,
        a.aplversion              AS version,

        -- ?? Soporte y reinicio
        a.aplhsoportevigente      AS soporteVigente,
        a.apltiemporeinicio       AS tiempoReinicio,
        a.aplhorareinicio         AS horaReinicio,
        a.aplsla                  AS sla,

        -- ?? Acceso y seguridad
        a.aplhttps                AS https,
        a.aplenlace               AS enlace,
        a.aplrutadoctecnico       AS rutaDocTecnico,

        -- ?? Área funcional
        a.aplarearequirente       AS areaRequirente,
        a.aplsubarea              AS subarea,
        a.aplproceso              AS proceso,

        -- ?? Descripción y observaciones
        a.apldescripcion          AS descripcion,
        a.aplobservaciones        AS observaciones,

        -- ?? Relaciones semánticas (códigos + nombres)
        a.cricodigo               AS idCriticidad,
        c.crinombre               AS criticidad,

        a.tipccodigo              AS idTipoCatastro,
        tc.tipcnombre             AS tipoCatastro,

        a.hercodigo               AS idHerramienta,
        h.hernombre               AS herramienta,

        a.tipaccesocodigo         AS idTipoAcceso,
        ta.tipaccesonombre        AS tipoAcceso,

        a.tipcodigo               AS idTipoUsuario,
        tu.tipnombre              AS tipoUsuario,

        a.tfdcodigo               AS idTipoFuenteDatos,
        tf.tfdnombre              AS tipoFuenteDatos,

        a.estcodigo               AS idEstado,
        e.estnombre               AS estado,

        a.intcodigo               AS idTipoIntegracion,
        ti.intnombre              AS tipoIntegracion,

        a.fuecodigo               AS idFuente,
        f.fuenombre               AS fuente,

        a.descodigo               AS idDesarrollo,
        d.desnombre               AS desarrollo,

        a.concodigo               AS idControl,
        co.connombre              AS control,

        -- ?? Contrato asociado (si existe)
        ca.contcodigo             AS idContrato,
        ca.conttipo               AS tipoContrato,
        ca.contproveedor          AS proveedorContrato,
        ca.contregistro           AS registroContrato

    FROM dbo.aplicativo a
    INNER JOIN dbo.criticidad c         ON a.cricodigo = c.cricodigo
    INNER JOIN dbo.tipo_catastro tc     ON a.tipccodigo = tc.tipccodigo
    INNER JOIN dbo.herramienta h        ON a.hercodigo = h.hercodigo
    INNER JOIN dbo.tipo_acceso ta       ON a.tipaccesocodigo = ta.tipaccesocodigo
    INNER JOIN dbo.tipo_usuario tu      ON a.tipcodigo = tu.tipcodigo
    INNER JOIN dbo.tipo_fuentedatos tf  ON a.tfdcodigo = tf.tfdcodigo
    INNER JOIN dbo.estado e             ON a.estcodigo = e.estcodigo
    INNER JOIN dbo.tipo_integracion ti  ON a.intcodigo = ti.intcodigo
    INNER JOIN dbo.fuente f             ON a.fuecodigo = f.fuecodigo
    INNER JOIN dbo.desarrollo d         ON a.descodigo = d.descodigo
    INNER JOIN dbo.control co           ON a.concodigo = co.concodigo
    LEFT JOIN dbo.contrato_aplicativo ca ON a.aplcodigo = ca.aplcodigo

    ORDER BY a.aplnombrecompleto ASC;
END
-----------------------------------------------------------------------------
CREATE OR ALTER PROCEDURE dbo.enable_aplicativo
    @aplcodigo INT
AS
BEGIN
    SET NOCOUNT ON;

    -- ?? Validación de existencia
    IF NOT EXISTS (SELECT 1 FROM dbo.aplicativo WHERE aplcodigo = @aplcodigo)
    BEGIN
        SELECT 'error' AS status, 'Aplicativo no encontrado' AS mensaje;
        RETURN;
    END

    -- ?? Rehabilitación lógica
    UPDATE dbo.aplicativo
    SET aplactivo = 1,
        aplfechaactualizacion = GETDATE()
    WHERE aplcodigo = @aplcodigo;

    -- ?? Confirmación visual
    SELECT 'habilitado' AS status, 'Aplicativo habilitado correctamente.' AS mensaje;
END
GO


CREATE OR ALTER PROCEDURE dbo.disable_aplicativo
    @aplcodigo INT
AS
BEGIN
    SET NOCOUNT ON;

    -- ?? Validación de existencia
    IF NOT EXISTS (SELECT 1 FROM dbo.aplicativo WHERE aplcodigo = @aplcodigo)
    BEGIN
        SELECT 'error' AS status, 'Aplicativo no encontrado' AS mensaje;
        RETURN;
    END

    -- ?? Deshabilitación lógica
    UPDATE dbo.aplicativo
    SET aplactivo = 0,
        aplfechaactualizacion = GETDATE()
    WHERE aplcodigo = @aplcodigo;

    -- ?? Confirmación visual
    SELECT 'deshabilitado' AS status, 'Aplicativo deshabilitado correctamente.' AS mensaje;
END
GO

-----------------------------------------------------------------------------
